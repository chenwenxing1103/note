url使用占位路径/{id}时，请求参数使用@PathVariable("id")指定参数名，使用?id=xxx时使用@RequestParam（"id"）指定参数名。
@RequestBody用于接收请求体中的数据，get请求无请求体。@RequestBody与@RequestParam()可以同时使用，@RequestBody最多只能有一个，
而@RequestParam()可以有多个。
required=true/false指定请求是否必须传参

pojo实体类中，类上加@Table(name="tb_user")指定实体类与表的映射关系,该依赖是JPA里的，需要引入JPA,直接引用通用Mapper即可
在boot启动类上加@MapperScan("包全名")，指定Mapper包扫描

json跨域问题：解决方案：
（1）使用Jsonp（早期方案，现在不使用）利用script标签发起请求，只能发起GET请求，需要后台支持
（2）使用Nginx反向代理
（3）CORS解决方案
        //1.添加CORS配置信息
        CorsConfiguration config = new CorsConfiguration();

        //1) 允许的域,不要写*，否则cookie就无法使用了
        config.addAllowedOrigin("http://manage.leyou.com");
        config.addAllowedOrigin("http://www.leyou.com");
        //2) 是否发送Cookie信息
        config.setAllowCredentials(true);
        //3) 允许的请求方式
        config.addAllowedMethod("OPTIONS");
        // 4）允许的头信息
        config.addAllowedHeader("*");
        //2.添加映射路径，我们拦截一切请求
        UrlBasedCorsConfigurationSource configSource = new UrlBasedCorsConfigurationSource();
        configSource.registerCorsConfiguration("/**", config);

        //3.返回新的CorsFilter.
        return new CorsFilter(configSource);

读取application.yml文件里的自定义属性：
  新建一个配置文件类，在类上加@ConfigurationProperties(prefix = "ly.upload")，类中定义成员变量。
  使用时在需要使用的类上添加@EnableConfigurationProperties（UplodProperties.class）注解，自动注入UplodProperties即可使用
